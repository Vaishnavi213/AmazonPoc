// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poc.Web.DAL;

namespace Poc.Web.DAL.Migrations
{
    [DbContext(typeof(AmazonDbContext))]
    partial class AmazonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Poc.Web.Entities.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<decimal>("Price");

                    b.Property<int>("Product_Id");

                    b.Property<string>("Product_Image");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("Total");

                    b.HasKey("CartId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Product_Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Poc.Web.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Poc.Web.Entities.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustEmail");

                    b.Property<string>("CustName");

                    b.Property<string>("CustPassword");

                    b.Property<string>("CustPhoneNo");

                    b.Property<string>("Role");

                    b.HasKey("CustId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Poc.Web.Entities.CustomerOrderHistory", b =>
                {
                    b.Property<int>("CustomerOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerCustId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("DeliveredAddress");

                    b.Property<decimal>("TotalPurchase");

                    b.HasKey("CustomerOrderId");

                    b.HasIndex("CustomerCustId");

                    b.ToTable("CustomerOrderHistory");
                });

            modelBuilder.Entity("Poc.Web.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<decimal>("Price");

                    b.Property<string>("ProductName");

                    b.Property<int>("Quantity");

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Poc.Web.Entities.Cart", b =>
                {
                    b.HasOne("Poc.Web.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Poc.Web.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Poc.Web.Entities.CustomerOrderHistory", b =>
                {
                    b.HasOne("Poc.Web.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCustId");
                });
#pragma warning restore 612, 618
        }
    }
}
